version: "3.9"

name: avaliacao-ii

services:
  postgres:
    image: postgres:16-alpine
    container_name: pg_avaliacao
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-avaliacao2}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-avaliacao2}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db_net

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: api_avaliacao
    env_file:
      - ../api/.env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - db_net     # fala com o banco
      - web_net    # expõe/compartilha com o front

  front:
    build:
      context: ../front
      dockerfile: Dockerfile
      args:
        # IMPORTANTE: o front roda no navegador do usuário,
        # então a API deve ser acessada pelo host (localhost)
        REACT_APP_API_URL: "http://localhost:3000"
    container_name: front_avaliacao
    ports:
      - "3001:3000"   # front em http://localhost:3001
    depends_on:
      api:
        condition: service_started
    networks:
      - web_net

volumes:
  pg_data:
    name: pg_data_avaliacao

networks:
  db_net:
    name: avaliacao_db_net
    driver: bridge
  web_net:
    name: avaliacao_web_net
    driver: bridge
